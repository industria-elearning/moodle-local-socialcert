{"version":3,"file":"actions.min.js","sources":["../src/actions.js"],"sourcesContent":["// amd/src/actions.js\nimport {get_string as getString} from 'core/str';\n\n/**\n * Mapa de acciones: nombre -> handler(ev, el)\n * @type {Map<string, Function>}\n */\nconst registry = new Map();\n\n/**\n * Delegaci√≥n de eventos: escucha en `root` y, si el objetivo o un ancestro\n * coincide con `selector`, ejecuta `handler(ev, targetMatch)`.\n * @param {HTMLElement} root     Contenedor ra√≠z donde delegar\n * @param {string} selector      Selector a matchear (con closest)\n * @param {string} type          Tipo de evento (p.ej., 'click')\n * @param {(ev:Event, el:HTMLElement)=>void} handler  Manejador\n * @returns {void}\n */\nfunction on(root, selector, type, handler) {\n  root.addEventListener(type, (ev) => {\n    const origin = /** @type {Element} */(ev.target instanceof Element ? ev.target : root);\n    const target = origin.closest(selector);\n    if (!target || !root.contains(target)) {\n      return;\n    }\n    handler(ev, /** @type {HTMLElement} */(target));\n  });\n}\n\n/**\n * Muestra/oculta nodos seg√∫n el estado actual de red en `root.dataset.network`.\n * Cada bloque sensible debe declarar `data-visible-on=\"linkedin twitter ...\"`\n * @param {HTMLElement} root  Contenedor ra√≠z con data-network\n * @returns {void}\n */\nfunction updateVisibility(root) {\n  const current = root.dataset.network || '';\n  root.querySelectorAll('[data-visible-on]').forEach(el => {\n    const allowed = (el.getAttribute('data-visible-on') || '').split(/\\s+/);\n    if (allowed.includes(current)) {\n      el.classList.remove('d-none');\n    } else {\n      el.classList.add('d-none');\n    }\n  });\n}\n\n/**\n * Selecciona pesta√±a/red (data-network), actualiza aria-selected y visibilidad.\n * @param {MouseEvent} ev\n * @param {HTMLElement} el  Bot√≥n con data-network=\"...\"\n * @returns {void}\n */\nexport function handleSelectNetwork(ev, el) {\n  ev.preventDefault();\n  const root = el.closest('.local-socialcert');\n  if (!root) {\n    return;\n  }\n\n  const next = el.dataset.network;\n  if (!next) {\n    return;\n  }\n\n  // Estado\n  root.dataset.network = next;\n\n  // Toggle visual en el grupo\n  const group = el.closest('.lsc-social-tabs');\n  if (group) {\n    group.querySelectorAll('[data-action=\"select-network\"]').forEach(b => {\n      b.classList.toggle('active', b === el);\n      b.setAttribute('aria-selected', b === el ? 'true' : 'false');\n    });\n  }\n\n  // Mostrar/ocultar secciones\n  updateVisibility(root);\n}\n\n/**\n * Abre un enlace en nueva pesta√±a. Usa href o data-url.\n * Marca aria-busy brevemente como feedback.\n * @param {MouseEvent} ev\n * @param {HTMLElement} el\n * @returns {void}\n */\nfunction handleOpenLink(ev, el) {\n  // Si es <a> con href, dejamos que el browser lo haga,\n  // pero a√±adimos un peque√±o ‚Äúbusy‚Äù/tracking si quieres.\n  // Si NO quieres prevenir, comenta la l√≠nea de preventDefault.\n  ev.preventDefault();\n\n  el.setAttribute('aria-busy', 'true');\n  // Si el elemento no tiene href (ej. <button>), abrimos data-url:\n  const url = el.getAttribute('href') || el.dataset.url;\n  if (url) {\n    window.open(url, '_blank', 'noopener');\n  }\n  // Quita busy luego de un tick\n  setTimeout(() => el.removeAttribute('aria-busy'), 300);\n}\n\n/**\n * Copia el contenido del cuadro de respuesta al portapapeles.\n * - data-target: selector del contenedor (ej. \"#ai-response\")\n * - data-copy: \"text\" (por defecto) o \"html\"\n *   - En ambos modos se eliminan spans .lsc-caret antes de copiar.\n *\n * @param {MouseEvent} _ev\n * @param {HTMLElement} el\n * @returns {void}\n */\nasync function handleCopyHtml(_ev, el) {\n  const sel = el.dataset.target || '';\n  const node = sel ? document.querySelector(sel) : null;\n  if (!node) {\n    return;\n  }\n\n  // Clonamos para poder limpiar elementos auxiliares (caret, etc.)\n  const clone = node.cloneNode(true);\n  const carets = clone.querySelectorAll('.lsc-caret');\n  carets.forEach(c => c.remove());\n\n  const mode = (el.dataset.copy === 'html') ? 'html' : 'text';\n  const content = (mode === 'html')\n    ? clone.innerHTML\n    : (clone.innerText || clone.textContent || '');\n\n  navigator.clipboard.writeText(content)\n    .then(() => {\n      // feedback opcional: cambiar el texto del bot√≥n brevemente\n      const original = el.textContent;\n      el.textContent = 'Copiado ‚úî';\n      setTimeout(() => { el.textContent = original; }, 1200);\n    })\n    .catch(() => {\n      // fallback opcional (silencioso)\n    });\n}\n\n/**\n * Copia la URL src de la imagen indicada en data-target.\n * @param {MouseEvent} _ev\n * @param {HTMLElement} el\n * @returns {void}\n */\nfunction handleCopyImage(_ev, el) {\n  const sel = el.dataset.target || '';\n  const img = sel ? document.querySelector(sel) : null;\n  if (!img) {\n    return;\n  }\n  // Copiar URL de imagen (sencillo y compatible)\n  const src = img.getAttribute('src');\n  if (src) {\n    navigator.clipboard.writeText(src);\n  }\n}\n\n\n// --- STREAM MOCK + TYPEWRITER -----------------------------------------------\n\n/**\n * Inserta y devuelve un cursor visual (caret) al final del elemento destino.\n * Se usa para simular escritura en vivo.\n *\n * @param {HTMLElement} el - Contenedor donde se a√±adir√° el caret.\n * @returns {HTMLSpanElement} caret - El nodo <span> insertado con la clase \"lsc-caret\".\n */\nfunction addCaret(el) {\n  const caret = document.createElement('span');\n  caret.className = 'lsc-caret';\n  caret.textContent = ' ';\n  el.appendChild(caret);\n  return caret;\n}\n\n/**\n * Elimina, si existe, el cursor visual (caret) dentro del elemento destino.\n *\n * @param {HTMLElement} el - Contenedor desde el que se eliminar√° el caret.\n * @returns {void}\n */\nfunction removeCaret(el) {\n  const caret = el.querySelector('.lsc-caret');\n  if (caret) { caret.remove(); }\n}\n\n// Control de streams por destino (para detener si se pulsa de nuevo)\nconst streams = new WeakMap();\n\n/**\n * Escribe texto en unidades (char|word) con un intervalo.\n * @param {HTMLElement} el\n * @param {string} text\n * @param {'char'|'word'} mode\n * @param {number} speedMs\n * @returns {{stop:Function, done:Promise<void>}}\n */\nexport function typewriter(el, text, mode, speedMs) {\n  const caret = addCaret(el);\n  const units = mode === 'char' ? text.split('') : text.split(/\\s+/);\n  let i = 0;\n  let stopped = false;\n  el.innerHTML = '';\n  el.appendChild(caret);\n\n  const done = new Promise((resolve) => {\n    const timer = setInterval(() => {\n      if (stopped) {\n        clearInterval(timer);\n        removeCaret(el);\n        resolve();\n        return;\n      }\n      if (i >= units.length) {\n        clearInterval(timer);\n        removeCaret(el);\n        resolve();\n        return;\n      }\n      const chunk = units[i++];\n      caret.insertAdjacentText('beforebegin', mode === 'word' ? (chunk + ' ') : chunk);\n    }, Math.max(10, speedMs || 30));\n    streams.set(el, { stop: () => { stopped = true; } });\n  });\n\n  return { stop() { const s = streams.get(el); if (s) { s.stop(); streams.delete(el); } }, done };\n}\n\n/** MOCK: sustituye luego por tu fetch real */\nfunction fetchAiMock() {\n  const demo = \"Lorem ipsum dolor sit amet consectetur adipiscing elit vel curae id, mauris vivamus vulputate \" +\n  \"condimentum erat arcu ligula tristique tincidunt iaculis, ac tempor tortor suspendisse torquent nisl \" +\n  \"commodo eget mus. Nulla penatibus nostra inceptos tortor congue quam mollis ornare class, dui nunc \" +\n  \"iaculis bibendum nascetur himenaeos facilisi rhoncus, morbi nibh arcu ullamcorper faucibus dictumst \" +\n  \"facilisis tristique. Taciti lacus maecenas vulputate vel nostra ante interdum vivamus enim, est \" +\n  \"malesuada volutpat semper quisque etiam rhoncus lectus proin, quis sem vitae leo consequat euismod \" +\n  \"vestibulum facilisi. üôÇ.\";\n  return Promise.resolve(demo);\n}\n\n/**\n * Ejecuta/Detiene la ‚ÄúIA‚Äù (streaming).\n * Lee data-target, data-mode (\"char\"|\"word\"), data-speed (ms).\n * @param {MouseEvent} ev\n * @param {HTMLElement} btn\n */\nexport function runAiHandler(ev, btn) {\n  ev.preventDefault();\n\n  // Localiza el destino\n  const sel = btn.dataset.target;\n  let target = null;\n  if (sel) {\n    target = document.querySelector(sel);\n  } else {\n    const wrap = btn.closest('.lsc-response-wrap');\n    target = wrap ? wrap.querySelector('.lsc-response') : null;\n  }\n  if (!target) { return; }\n\n  // Si ya hay stream en ese destino: detener y restaurar\n  if (streams.has(target)) {\n    const s = streams.get(target);\n    if (s && s.stop) { s.stop(); }\n    btn.disabled = false;\n    btn.textContent = getString('airesponsebtn', 'local_socialcert');\n    return;\n  }\n\n  // Preparar UI\n  const mode = (btn.dataset.mode === 'char') ? 'char' : 'word';\n  const speed = parseInt(btn.dataset.speed || '40', 10);\n  const original = btn.textContent;\n  btn.disabled = true;\n  btn.textContent = 'Generating';\n  target.setAttribute('aria-busy', 'true');\n  target.setAttribute('role', 'status');\n\n  // Mock de respuesta (sustituye luego por tu fetch real)\n  fetchAiMock().then((fulltext) => {\n    const stream = typewriter(target, fulltext, mode, speed);\n    stream.done.then(() => {\n      btn.disabled = false;\n      btn.textContent = original;\n      target.removeAttribute('aria-busy');\n      streams.delete(target);\n    });\n  }).catch(() => {\n    btn.disabled = false;\n    btn.textContent = original;\n    target.removeAttribute('aria-busy');\n  });\n}\n\n/**\n * Copia al portapapeles:\n *  - el valor expl√≠cito en data-copy-value, o\n *  - si no est√°, el texto visible del elemento.\n * Muestra feedback breve en el chip de copiar si existe.\n * @param {MouseEvent|KeyboardEvent} ev\n * @param {HTMLElement} el\n */\nexport function handleCopyText(ev, el) {\n  // Soporta acticonst con Enter/Espacio si llega por teclado\n  if (ev.type === 'keydown') {\n    const code = ev.key || ev.code;\n    if (code !== 'Enter' && code !== ' ' && code !== 'Spacebar') { return; }\n    ev.preventDefault();\n  }\n\n  let value = el.getAttribute('data-copy-value');\n  if (!value) {\n    // Toma el texto visible; ignora el icono de copiar\n    const clone = el.cloneNode(true);\n    const btn = clone.querySelector('.lsc-copybtn');\n    if (btn) { btn.remove(); }\n    value = clone.innerText || clone.textContent || '';\n  }\n\n  navigator.clipboard.writeText(value).then(function () {\n    // Feedback: swap temporal en el chip si est√°\n    let badge = el.querySelector('.lsc-copybtn');\n    if (!badge) { return; }\n    const original = badge.textContent;\n    badge.textContent = '‚úî';\n    setTimeout(function () { badge.textContent = original; }, 900);\n  }).catch(function () {\n    // Silencioso; podr√≠as mostrar \\core\\notification desde PHP si lo prefieres\n  });\n}\n\n/**\n * Registra una acci√≥n para usar con data-action=\"name\".\n * @param {string} name\n * @param {(ev:Event, el:HTMLElement)=>void} fn\n * @returns {void}\n */\nexport function register(name, fn) { registry.set(name, fn); }\n\n/**\n * Descarga la imagen indicada por data-url o por el src de data-target.\n * A√±ade forcedownload=1 para pluginfile.php (Moodle) para forzar la descarga.\n * @param {MouseEvent} _ev\n * @param {HTMLElement} el\n */\nfunction handleDownloadImage(_ev, el) {\n  // 1) Resolver URL\n  let url = el.getAttribute('data-url') || '';\n\n  if (!url) {\n    const sel = el.getAttribute('data-target') || '';\n    const img = sel ? document.querySelector(sel) : null;\n    if (img) { url = img.getAttribute('src') || ''; }\n  }\n  if (!url) { return; }\n\n  // 2) Si es pluginfile.php, a√±ade forcedownload=1\n  try {\n    const u = new URL(url, window.location.origin);\n    if (u.pathname.indexOf('/pluginfile.php') !== -1 && !u.searchParams.has('forcedownload')) {\n      u.searchParams.set('forcedownload', '1');\n      url = u.toString();\n    }\n  } catch (_e) { /* usa url tal cual */ }\n\n  // 3) Nombre de archivo\n  const filename = el.getAttribute('data-filename') || (function () {\n    try {\n      const u2 = new URL(url, window.location.origin);\n      const base = u2.pathname.split('/').pop() || 'certificado';\n      return base.indexOf('.') === -1 ? (base + '.png') : base;\n    } catch (_e) { return 'certificado.png'; }\n  })();\n\n  // 4) Intento principal: descargar como blob (mejor UX)\n  fetch(url, { credentials: 'same-origin' })\n    .then(function (res) {\n      if (!res.ok) { throw new Error('HTTP ' + res.status); }\n      return res.blob();\n    })\n    .then(function (blob) {\n      const blobUrl = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = blobUrl;\n      a.download = filename;           // fuerza descarga con nombre\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n      setTimeout(function () { URL.revokeObjectURL(blobUrl); }, 500);\n    })\n    .catch(function () {\n      // 5) Fallback: abrir en nueva pesta√±a (usuario guarda manualmente)\n      const a = document.createElement('a');\n      a.href = url;\n      a.target = '_blank';\n      a.rel = 'noopener';\n      // Si es misma-origen, download tambi√©n podr√≠a funcionar sin blob:\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n    });\n}\n\n/**\n * Punto de entrada: registra handlers base y activa la delegaci√≥n de clicks.\n * @returns {void}\n */\nexport function init() {\n  const root = document.querySelector('.local-socialcert');\n  if (!root) {\n    return;\n  }\n\n  // ‚¨áÔ∏è FALTABA registrar el selector de red\n  register('select-network', handleSelectNetwork);\n  updateVisibility(root);\n\n  // Registra acciones base\n  register('open-link', handleOpenLink);\n  register('copy-html', handleCopyHtml);\n  register('copy-image', handleCopyImage);\n  register('run-ai', runAiHandler);\n  register('copy-text', handleCopyText);\n  register('download-image', handleDownloadImage);\n\n  // Delegaci√≥n √∫nica para todos los clicks con data-action\n  on(root, '[data-action]', 'click', (ev, el) => {\n    const action = el.dataset.action;\n    const fn = registry.get(action);\n    if (fn) {\n      fn(ev, el);\n    }\n  });\n\n  on(root, '[data-action=\"copy-text\"]', 'keydown', (ev, el) => handleCopyText(ev, el));\n\n  // ‚¨áÔ∏è Calcula visibilidad inicial seg√∫n data-network del root\n  updateVisibility(root);\n}\n"],"names":["root","document","querySelector","register","handleSelectNetwork","updateVisibility","handleOpenLink","handleCopyHtml","handleCopyImage","runAiHandler","handleCopyText","handleDownloadImage","on","ev","el","action","dataset","fn","registry","get","Map","selector","type","handler","addEventListener","target","Element","closest","contains","current","network","querySelectorAll","forEach","getAttribute","split","includes","classList","remove","add","preventDefault","next","group","b","toggle","setAttribute","url","window","open","setTimeout","removeAttribute","_ev","sel","node","clone","cloneNode","c","content","copy","innerHTML","innerText","textContent","navigator","clipboard","writeText","then","original","catch","img","src","removeCaret","caret","streams","WeakMap","typewriter","text","mode","speedMs","createElement","className","appendChild","addCaret","units","i","stopped","stop","s","delete","done","Promise","resolve","timer","setInterval","clearInterval","length","chunk","insertAdjacentText","Math","max","set","btn","wrap","has","disabled","speed","parseInt","fulltext","code","key","value","badge","name","u","URL","location","origin","pathname","indexOf","searchParams","toString","_e","filename","base","pop","fetch","credentials","res","ok","Error","status","blob","blobUrl","createObjectURL","a","href","download","body","click","revokeObjectURL","rel"],"mappings":"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"}