{"version":3,"file":"actions.min.js","sources":["../src/actions.js"],"sourcesContent":["// amd/src/actions.js\n\n/**\n * Mapa de acciones: nombre -> handler(ev, el)\n * @type {Map<string, Function>}\n */\nconst registry = new Map();\n\n/**\n * Delegaci√≥n de eventos: escucha en `root` y, si el objetivo o un ancestro\n * coincide con `selector`, ejecuta `handler(ev, targetMatch)`.\n * @param {HTMLElement} root     Contenedor ra√≠z donde delegar\n * @param {string} selector      Selector a matchear (con closest)\n * @param {string} type          Tipo de evento (p.ej., 'click')\n * @param {(ev:Event, el:HTMLElement)=>void} handler  Manejador\n * @returns {void}\n */\nfunction on(root, selector, type, handler) {\n  root.addEventListener(type, (ev) => {\n    const target = ev.target.closest(selector);\n    if (!target || !root.contains(target)) {\n      return;\n    }\n    handler(ev, target);\n  });\n}\n\n/**\n * Muestra/oculta nodos seg√∫n el estado actual de red en `root.dataset.network`.\n * Cada bloque sensible debe declarar `data-visible-on=\"linkedin twitter ...\"`\n * @param {HTMLElement} root  Contenedor ra√≠z con data-network\n * @returns {void}\n */\nfunction updateVisibility(root) {\n  const current = root.dataset.network || '';\n  root.querySelectorAll('[data-visible-on]').forEach(el => {\n    const allowed = (el.getAttribute('data-visible-on') || '').split(/\\s+/);\n    if (allowed.includes(current)) {\n      el.classList.remove('d-none');\n    } else {\n      el.classList.add('d-none');\n    }\n  });\n}\n\n/**\n * Selecciona pesta√±a/red (data-network), actualiza aria-selected y visibilidad.\n * @param {MouseEvent} ev\n * @param {HTMLElement} el  Bot√≥n con data-network=\"...\"\n * @returns {void}\n */\nexport function handleSelectNetwork(ev, el) {\n  ev.preventDefault();\n  const root = el.closest('.local-socialcert');\n  if (!root) {\n    return;\n  }\n\n  const next = el.dataset.network;\n  if (!next) {\n    return;\n  }\n\n  // Estado\n  root.dataset.network = next;\n\n  // Toggle visual en el grupo\n  const group = el.closest('.lsc-social-tabs');\n  if (group) {\n    group.querySelectorAll('[data-action=\"select-network\"]').forEach(b => {\n      b.classList.toggle('active', b === el);\n      b.setAttribute('aria-selected', b === el ? 'true' : 'false');\n    });\n  }\n\n  // Mostrar/ocultar secciones\n  updateVisibility(root);\n}\n\n/**\n * Abre un enlace en nueva pesta√±a. Usa href o data-url.\n * Marca aria-busy brevemente como feedback.\n * @param {MouseEvent} ev\n * @param {HTMLElement} el\n * @returns {void}\n */\nfunction handleOpenLink(ev, el) {\n  // Si es <a> con href, dejamos que el browser lo haga,\n  // pero a√±adimos un peque√±o ‚Äúbusy‚Äù/tracking si quieres.\n  // Si NO quieres prevenir, comenta la l√≠nea de preventDefault.\n  ev.preventDefault();\n\n  el.setAttribute('aria-busy', 'true');\n  // Si el elemento no tiene href (ej. <button>), abrimos data-url:\n  const url = el.getAttribute('href') || el.dataset.url;\n  if (url) {\n    window.open(url, '_blank', 'noopener');\n  }\n  // Quita busy luego de un tick\n  setTimeout(() => el.removeAttribute('aria-busy'), 300);\n}\n\n/**\n * Copia el contenido del cuadro de respuesta al portapapeles.\n * - data-target: selector del contenedor (ej. \"#ai-response\")\n * - data-copy: \"text\" (por defecto) o \"html\"\n *   - En ambos modos se eliminan spans .lsc-caret antes de copiar.\n *\n * @param {MouseEvent} _ev\n * @param {HTMLElement} el\n * @returns {void}\n */\nfunction handleCopyHtml(_ev, el) {\n  const sel = el.dataset.target || '';\n  const node = sel ? document.querySelector(sel) : null;\n  if (!node) {\n    return;\n  }\n\n  // Clonamos para poder limpiar elementos auxiliares (caret, etc.)\n  const clone = node.cloneNode(true);\n  const carets = clone.querySelectorAll('.lsc-caret');\n  carets.forEach(c => c.remove());\n\n  const mode = (el.dataset.copy === 'html') ? 'html' : 'text';\n  const content = (mode === 'html')\n    ? clone.innerHTML\n    : (clone.innerText || clone.textContent || '');\n\n  navigator.clipboard.writeText(content)\n    .then(() => {\n      // feedback opcional: cambiar el texto del bot√≥n brevemente\n      const original = el.textContent;\n      el.textContent = 'Copiado ‚úî';\n      setTimeout(() => { el.textContent = original; }, 1200);\n    })\n    .catch(() => {\n      // fallback opcional (silencioso)\n    });\n}\n\n/**\n * Copia la URL src de la imagen indicada en data-target.\n * @param {MouseEvent} _ev\n * @param {HTMLElement} el\n * @returns {void}\n */\nfunction handleCopyImage(_ev, el) {\n  const sel = el.dataset.target || '';\n  const img = sel ? document.querySelector(sel) : null;\n  if (!img) {\n    return;\n  }\n  // Copiar URL de imagen (sencillo y compatible)\n  const src = img.getAttribute('src');\n  if (src) {\n    navigator.clipboard.writeText(src);\n  }\n}\n\n/**\n * Registra una acci√≥n para usar con data-action=\"name\".\n * @param {string} name\n * @param {(ev:Event, el:HTMLElement)=>void} fn\n * @returns {void}\n */\nexport function register(name, fn) { registry.set(name, fn); }\n\n/**\n * Punto de entrada: registra handlers base y activa la delegaci√≥n de clicks.\n * @returns {void}\n */\nexport function init() {\n  const root = document.querySelector('.local-socialcert');\n  if (!root) {\n    return;\n  }\n\n  // ‚¨áÔ∏è FALTABA registrar el selector de red\n  register('select-network', handleSelectNetwork);\n  updateVisibility(root);\n\n  // Registra acciones base\n  register('open-link', handleOpenLink);\n  register('copy-html', handleCopyHtml);\n  register('copy-image', handleCopyImage);\n  register('run-ai', runAiHandler);\n\n  // Delegaci√≥n √∫nica para todos los clicks con data-action\n  on(root, '[data-action]', 'click', (ev, el) => {\n    const action = el.dataset.action;\n    const fn = registry.get(action);\n    if (fn) {\n      fn(ev, el);\n    }\n  });\n\n  // ‚¨áÔ∏è Calcula visibilidad inicial seg√∫n data-network del root\n  updateVisibility(root);\n}\n\n// --- STREAM MOCK + TYPEWRITER -----------------------------------------------\n\n/**\n * Inserta y devuelve un cursor visual (caret) al final del elemento destino.\n * Se usa para simular escritura en vivo.\n *\n * @param {HTMLElement} el - Contenedor donde se a√±adir√° el caret.\n * @returns {HTMLSpanElement} caret - El nodo <span> insertado con la clase \"lsc-caret\".\n */\nfunction addCaret(el) {\n  const caret = document.createElement('span');\n  caret.className = 'lsc-caret';\n  caret.textContent = ' ';\n  el.appendChild(caret);\n  return caret;\n}\n\n/**\n * Elimina, si existe, el cursor visual (caret) dentro del elemento destino.\n *\n * @param {HTMLElement} el - Contenedor desde el que se eliminar√° el caret.\n * @returns {void}\n */\nfunction removeCaret(el) {\n  const caret = el.querySelector('.lsc-caret');\n  if (caret) { caret.remove(); }\n}\n\n// Control de streams por destino (para detener si se pulsa de nuevo)\nconst streams = new WeakMap();\n\n/**\n * Escribe texto en unidades (char|word) con un intervalo.\n * @param {HTMLElement} el\n * @param {string} text\n * @param {'char'|'word'} mode\n * @param {number} speedMs\n * @returns {{stop:Function, done:Promise<void>}}\n */\nexport function typewriter(el, text, mode, speedMs) {\n  const caret = addCaret(el);\n  const units = mode === 'char' ? text.split('') : text.split(/\\s+/);\n  let i = 0;\n  let stopped = false;\n  el.innerHTML = '';\n  el.appendChild(caret);\n\n  const done = new Promise((resolve) => {\n    const timer = setInterval(() => {\n      if (stopped) {\n        clearInterval(timer);\n        removeCaret(el);\n        resolve();\n        return;\n      }\n      if (i >= units.length) {\n        clearInterval(timer);\n        removeCaret(el);\n        resolve();\n        return;\n      }\n      const chunk = units[i++];\n      caret.insertAdjacentText('beforebegin', mode === 'word' ? (chunk + ' ') : chunk);\n    }, Math.max(10, speedMs || 30));\n    streams.set(el, { stop: () => { stopped = true; } });\n  });\n\n  return { stop() { const s = streams.get(el); if (s) { s.stop(); streams.delete(el); } }, done };\n}\n\n/** MOCK: sustituye luego por tu fetch real */\nfunction fetchAiMock() {\n  const demo = \"Lorem ipsum dolor sit amet consectetur adipiscing elit vel curae id, mauris vivamus vulputate \" +\n  \"condimentum erat arcu ligula tristique tincidunt iaculis, ac tempor tortor suspendisse torquent nisl \" +\n  \"commodo eget mus. Nulla penatibus nostra inceptos tortor congue quam mollis ornare class, dui nunc \" +\n  \"iaculis bibendum nascetur himenaeos facilisi rhoncus, morbi nibh arcu ullamcorper faucibus dictumst \" +\n  \"facilisis tristique. Taciti lacus maecenas vulputate vel nostra ante interdum vivamus enim, est \" +\n  \"malesuada volutpat semper quisque etiam rhoncus lectus proin, quis sem vitae leo consequat euismod \" +\n  \"vestibulum facilisi. üôÇ.\";\n  return Promise.resolve(demo);\n}\n\n/**\n * Ejecuta/Detiene la ‚ÄúIA‚Äù (streaming).\n * Lee data-target, data-mode (\"char\"|\"word\"), data-speed (ms).\n * @param {MouseEvent} ev\n * @param {HTMLElement} btn\n */\nexport function runAiHandler(ev, btn) {\n  ev.preventDefault();\n\n  // Localiza el destino\n  const sel = btn.dataset.target;\n  let target = null;\n  if (sel) {\n    target = document.querySelector(sel);\n  } else {\n    const wrap = btn.closest('.lsc-response-wrap');\n    target = wrap ? wrap.querySelector('.lsc-response') : null;\n  }\n  if (!target) { return; }\n\n  // Si ya hay stream en ese destino: detener y restaurar\n  if (streams.has(target)) {\n    const s = streams.get(target);\n    if (s && s.stop) { s.stop(); }\n    btn.disabled = false;\n    btn.textContent = 'Activar IA';\n    return;\n  }\n\n  // Preparar UI\n  const mode = (btn.dataset.mode === 'char') ? 'char' : 'word';\n  const speed = parseInt(btn.dataset.speed || '40', 10);\n  const original = btn.textContent;\n  btn.disabled = true;\n  btn.textContent = 'Generando‚Ä¶';\n  target.setAttribute('aria-busy', 'true');\n  target.setAttribute('role', 'status');\n\n  // Mock de respuesta (sustituye luego por tu fetch real)\n  fetchAiMock().then((fulltext) => {\n    const stream = typewriter(target, fulltext, mode, speed);\n    stream.done.then(() => {\n      btn.disabled = false;\n      btn.textContent = original;\n      target.removeAttribute('aria-busy');\n      streams.delete(target);\n    });\n  }).catch(() => {\n    btn.disabled = false;\n    btn.textContent = original;\n    target.removeAttribute('aria-busy');\n  });\n}\n\n"],"names":["root","document","querySelector","register","handleSelectNetwork","updateVisibility","handleOpenLink","handleCopyHtml","handleCopyImage","runAiHandler","selector","type","handler","addEventListener","ev","target","closest","contains","on","el","action","dataset","fn","registry","get","Map","current","network","querySelectorAll","forEach","getAttribute","split","includes","classList","remove","add","preventDefault","next","group","b","toggle","setAttribute","url","window","open","setTimeout","removeAttribute","_ev","sel","node","clone","cloneNode","c","content","copy","innerHTML","innerText","textContent","navigator","clipboard","writeText","then","original","catch","img","src","name","set","removeCaret","caret","streams","WeakMap","typewriter","text","mode","speedMs","createElement","className","appendChild","addCaret","units","i","stopped","stop","s","delete","done","Promise","resolve","timer","setInterval","clearInterval","length","chunk","insertAdjacentText","Math","max","btn","wrap","has","disabled","speed","parseInt","fulltext"],"mappings":"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"}