{"version":3,"file":"actions.min.js","sources":["../src/actions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Plugin version and other meta-data are defined here.\n *\n * @package\n * @copyright   2025 Manuel Bojaca <manuel@buendata.com>\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Local SocialCert — frontend helpers.\n *\n * Responsibilities:\n * - Lightweight event delegation utility for click actions.\n * - Handlers for: opening external links, copying generated text, and AI “typewriter” effect.\n * - Triggering the AI request and streaming the response into the DOM.\n * - Public API: { init, register, runAiHandler, typewriter }.\n *\n * Notes:\n * - This module is loaded via $PAGE->requires->js_call_amd('local_socialcert/actions', 'init').\n * - The HTML is rendered by the Mustache template and provides the data-* hooks.\n */\n\nimport {get_string as getString} from 'core/str';\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\n\n/* ============================================================================\n * Action registry\n * ==========================================================================*/\n\n/**\n * Action registry mapping: actionName -> handler(event, element).\n * Handlers are registered once in {@link init} and invoked via delegation.\n * @type {Map<string, Function>}\n */\nconst registry = new Map();\n\n/* ============================================================================\n * Event delegation\n * ==========================================================================*/\n\n/**\n * Simple event delegation helper.\n * Listens on a root element and, when the event target or an ancestor matches\n * the selector, calls the provided handler with the matched element.\n *\n * @param {HTMLElement} root   Root container where the listener is attached.\n * @param {string} selector    CSS selector to match using Element.closest().\n * @param {string} type        Event type (e.g., \"click\").\n * @param {(ev: Event, el: HTMLElement) => void} handler  Callback invoked with the event and the matched element.\n * @returns {void}\n */\nfunction on(root, selector, type, handler) {\n  root.addEventListener(type, (ev) => {\n    const origin = /** @type {Element} */(ev.target instanceof Element ? ev.target : root);\n    const target = origin.closest(selector);\n    if (!target || !root.contains(target)) {\n      return;\n    }\n    handler(ev, /** @type {HTMLElement} */(target));\n  });\n}\n\n/* ============================================================================\n * Handlers: open link / copy to clipboard\n * ==========================================================================*/\n\n/**\n * Opens a link in a new tab (using element href or data-url) and briefly sets aria-busy for feedback.\n *\n * @param {MouseEvent} ev\n * @param {HTMLElement} el Element with an href or data-url attribute.\n * @returns {void}\n */\nfunction handleOpenLink(ev, el) {\n\n  ev.preventDefault();\n\n  el.setAttribute('aria-busy', 'true');\n\n  const url = el.getAttribute('href') || el.dataset.url;\n\n  if (url) {\n    window.open(url, '_blank', 'noopener');\n  }\n\n  setTimeout(() => el.removeAttribute('aria-busy'), 300);\n}\n\n/**\n * Copies the content of a target node to the clipboard.\n * - data-target: selector pointing to the container (e.g., \"#ai-response\").\n * - data-copy: \"text\" (default) or \"html\".\n *   - In both modes, temporary caret spans (.lsc-caret) are removed before copying.\n *\n * @param {MouseEvent} _ev\n * @param {HTMLElement} el Button element with data-target (and optional data-copy).\n * @returns {void}\n */\nasync function handleCopyHtml(_ev, el) {\n  const sel = el.dataset.target || '';\n  const node = sel ? document.querySelector(sel) : null;\n  if (!node) {\n    return;\n  }\n\n  const clone = node.cloneNode(true);\n  const carets = clone.querySelectorAll('.lsc-caret');\n  carets.forEach(c => c.remove());\n\n  const mode = (el.dataset.copy === 'html') ? 'html' : 'text';\n  const content = (mode === 'html')\n    ? clone.innerHTML\n    : (clone.innerText || clone.textContent || '');\n\n  navigator.clipboard.writeText(content)\n    .then(() => {\n\n      const btn = el.querySelector('[data-action=\"copy-html\"]');\n\n      if (!btn) {return;}\n\n      const originalHTML = btn.innerHTML;\n      btn.textContent = '✔';\n      setTimeout(() => { btn.textContent = originalHTML; }, 1200);\n    })\n    .catch(() => {\n\n    });\n}\n\n/* ============================================================================\n * Typewriter (stream mock) utilities\n * ==========================================================================*/\n\n/**\n * Inserts a visual caret at the end of the target element and returns it.\n * Used to simulate live typing.\n *\n * @param {HTMLElement} el Target container where the caret is appended.\n * @returns {HTMLSpanElement} The inserted <span> with class \"lsc-caret\".\n */\nfunction addCaret(el) {\n  const caret = document.createElement('span');\n  caret.className = 'lsc-caret';\n  caret.textContent = ' ';\n  el.appendChild(caret);\n  return caret;\n}\n\n/**\n * Removes the visual caret (if present) from a given element.\n *\n * @param {HTMLElement} el Container to clean up.\n * @returns {void}\n */\nfunction removeCaret(el) {\n  const caret = el.querySelector('.lsc-caret');\n  if (caret) { caret.remove(); }\n}\n\n/**\n * Tracks active streams per target so we can stop/replace them.\n * @type {WeakMap<HTMLElement, {stop: Function}>}\n */\nconst streams = new WeakMap();\n\n/**\n * Streams text into an element in \"char\" or \"word\" units with a configurable delay.\n *\n * @param {HTMLElement} el   Target element to receive the text.\n * @param {string} text      Full text to stream.\n * @param {'char'|'word'} mode Unit size used while streaming.\n * @param {number} speedMs   Interval between units (ms).\n * @returns {{stop: Function, done: Promise<void>}} Control handle with a stop() method and a completion promise.\n */\nexport function typewriter(el, text, mode, speedMs) {\n  const caret = addCaret(el);\n  const units = mode === 'char' ? text.split('') : text.split(/\\s+/);\n  let i = 0;\n  let stopped = false;\n  el.innerHTML = '';\n  el.appendChild(caret);\n\n  const done = new Promise((resolve) => {\n    const timer = setInterval(() => {\n      if (stopped) {\n        clearInterval(timer);\n        removeCaret(el);\n        resolve();\n        return;\n      }\n      if (i >= units.length) {\n        clearInterval(timer);\n        removeCaret(el);\n        resolve();\n        return;\n      }\n      const chunk = units[i++];\n      caret.insertAdjacentText('beforebegin', mode === 'word' ? (chunk + ' ') : chunk);\n    }, Math.max(10, speedMs || 30));\n    streams.set(el, { stop: () => { stopped = true; } });\n  });\n\n  return { stop() { const s = streams.get(el); if (s) { s.stop(); streams.delete(el); } }, done };\n}\n\n/* ============================================================================\n * AI request\n * ==========================================================================*/\n\n/**\n * Fetches an AI-generated response for the given context using the\n * `local_socialcert_get_ai_response` web service.\n *\n * @function ai_response\n * @async\n * @param {string} certname   Certificate (or student) name used in the prompt.\n * @param {string} course     Course name used in the prompt.\n * @param {string} org        Issuing organization name.\n * @param {string} socialmedia Target social network (e.g., \"LinkedIn\").\n * @returns {Promise<string>} Resolves to the AI textual reply.\n * @throws {SyntaxError} If the backend JSON is invalid.\n * @throws {Error} If the AJAX call fails (also reported via Notification.exception).\n *\n * @example\n * ai_response(\"Analytics Certificate\", \"BUEN DATA\", \"LinkedIn\")\n *   .then(reply => console.log(\"AI reply:\", reply))\n *   .catch(err => console.error(\"AI error:\", err));\n */\nfunction ai_response (certname, course, org, socialmedia) {\n  return new Promise((resolve, reject) => {\n    Ajax.call([{\n      methodname: 'local_socialcert_get_ai_response',\n      args: {\n        body: {\n          certname: certname,\n          course: course,\n          org: org,\n          socialmedia: socialmedia\n        }\n      },\n    }])[0].then((response) => {\n      try {\n        const parsed = JSON.parse(response.json);\n        return resolve(parsed.reply);\n      } catch (e) {\n        reject(e);\n      }\n    }).catch((err) => {\n      Notification.exception(err);\n      reject(err);\n    });\n  });\n}\n\n\n/* ============================================================================\n * Action: run AI\n * ==========================================================================*/\n\n/**\n * Starts/stops the “AI” streaming flow.\n * Reads data attributes from the trigger button:\n *  - data-target: CSS selector for the output node.\n *  - data-mode: \"char\" | \"word\" (streaming unit).\n *  - data-speed: interval in ms.\n *\n * Also manages a loader, ARIA states, and reveals the Copy button when done.\n *\n * @param {MouseEvent} ev\n * @param {HTMLElement} btn Triggering button element.\n * @returns {void}\n */\nexport function runAiHandler(ev, btn) {\n\n  ev.preventDefault();\n\n  const sel = btn.dataset.target;\n  let target = null;\n  if (sel) {\n    target = document.querySelector(sel);\n  } else {\n    const wrap = btn.closest('.lsc-response-wrap');\n    target = wrap ? wrap.querySelector('.lsc-response') : null;\n  }\n  if (!target) { return; }\n\n  if (streams.has(target)) {\n    const s = streams.get(target);\n    if (s && s.stop) { s.stop(); }\n    btn.disabled = false;\n    btn.textContent = getString('airesponsebtn', 'local_socialcert');\n    return;\n  }\n\n  const mode = (btn.dataset.mode === 'char') ? 'char' : 'word';\n  const speed = parseInt(btn.dataset.speed || '40', 10);\n  const certname = btn.dataset.certname || '';\n  const course = btn.dataset.course || '';\n  const org = btn.dataset.org || '';\n  const socialmedia = btn.dataset.socialmedia || '';\n  const id_servicio = btn.dataset.id_servicio || '';\n  const original = btn.textContent;\n  btn.disabled = true;\n  btn.textContent = 'Generating';\n  target.setAttribute('aria-busy', 'true');\n  target.setAttribute('role', 'status');\n\n  const loader = document.getElementById('ai-card');\n  const copyBtn = document.getElementById('copyBtn');\n\n  ai_response(certname, course, org, socialmedia, id_servicio).then((fulltext) => {\n    loader.classList.add('hidden');\n    loader.setAttribute('aria-busy', 'false');\n    const stream = typewriter(target, fulltext , mode, speed);\n    stream.done.then(() => {\n      btn.disabled = false;\n      btn.textContent = original;\n      target.removeAttribute('aria-busy');\n      streams.delete(target);\n    })\n    .finally(() => {\n      copyBtn.hidden=false;\n    });\n  }).catch(() => {\n    btn.disabled = false;\n    btn.textContent = original;\n    target.removeAttribute('aria-busy');\n  });\n}\n\n\n/* ============================================================================\n * Public API\n * ==========================================================================*/\n\n/**\n * Registers an action handler that can be invoked via data-action=\"name\".\n *\n * @param {string} name\n * @param {(ev: Event, el: HTMLElement) => void} fn\n * @returns {void}\n */\nexport function register(name, fn) { registry.set(name, fn); }\n\n/**\n * Entry point: registers base actions and sets up click delegation.\n * Called once when the AMD module is loaded.\n *\n * @returns {void}\n */\nexport function init() {\n  const root = document.querySelector('.local-socialcert');\n  if (!root) {\n    return;\n  }\n\n  register('open-link', handleOpenLink);\n  register('copy-html', handleCopyHtml);\n  register('run-ai', runAiHandler);\n\n  on(root, '[data-action]', 'click', (ev, el) => {\n    const action = el.dataset.action;\n    const fn = registry.get(action);\n    if (fn) {\n      fn(ev, el);\n    }\n  });\n}\n"],"names":["root","document","querySelector","register","handleOpenLink","handleCopyHtml","runAiHandler","selector","type","handler","addEventListener","ev","target","Element","closest","contains","on","el","action","dataset","fn","registry","get","Map","preventDefault","setAttribute","url","getAttribute","window","open","setTimeout","removeAttribute","_ev","sel","node","clone","cloneNode","querySelectorAll","forEach","c","remove","content","copy","innerHTML","innerText","textContent","navigator","clipboard","writeText","then","btn","originalHTML","catch","removeCaret","caret","streams","WeakMap","typewriter","text","mode","speedMs","createElement","className","appendChild","addCaret","units","split","i","stopped","stop","s","delete","done","Promise","resolve","timer","setInterval","clearInterval","length","chunk","insertAdjacentText","Math","max","set","wrap","has","disabled","speed","parseInt","certname","course","org","socialmedia","original","id_servicio","loader","getElementById","copyBtn","reject","call","methodname","args","body","response","parsed","JSON","parse","json","reply","e","err","exception","ai_response","fulltext","classList","add","finally","hidden","name"],"mappings":"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"}