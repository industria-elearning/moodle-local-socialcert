{"version":3,"file":"airesponse.min.js","sources":["../src/airesponse.js"],"sourcesContent":["/**\n * POST JSON a un endpoint externo con Bearer token.\n * @param {string} endpoint\n * @param {string} token\n * @param {Object} payload\n * @returns {Promise<Object|string>} JSON o texto crudo\n */\nasync function postCert (endpoint, token, payload) {\n    const res = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        },\n        body: JSON.stringify(payload)\n    });\n\n    if (!res.ok) {\n        const text = await res.text();\n        throw new Error(`HTTP ${res.status}: ${text}`);\n    }\n\n    // Intenta JSON; si no, devuelve texto\n    try {\n        return await res.json();\n    } catch (e) {\n        return await res.text();\n    }\n}\n\n/**\n * Opción simple: enlazar a un botón.\n * @param {string} selector CSS del botón\n * @param {string} endpoint\n * @param {string} token\n * @param {Object} payload\n */\nexport function init (selector, endpoint, token, payload) {\n    const btn = document.querySelector(selector);\n    if (!btn) {\n        // No hay botón, salir silencioso\n        return;\n    }\n    btn.addEventListener('click', async () => {\n        btn.disabled = true;\n        try {\n            const data = await postCert(endpoint, token, payload);\n            // Ajusta manejo según tu UI\n            // eslint-disable-next-line no-alert\n            alert(typeof data === 'string' ? data : JSON.stringify(data));\n        } catch (err) {\n            // eslint-disable-next-line no-alert\n            alert(err.message);\n        } finally {\n            btn.disabled = false;\n        }\n    });\n}\n"],"names":["selector","endpoint","token","payload","btn","document","querySelector","addEventListener","async","disabled","data","res","fetch","method","headers","body","JSON","stringify","ok","text","Error","status","json","e","postCert","alert","err","message"],"mappings":"oJAsCsBA,SAAUC,SAAUC,MAAOC,eACvCC,IAAMC,SAASC,cAAcN,cAC9BI,WAILA,IAAIG,iBAAiB,SAASC,UAC1BJ,IAAIK,UAAW,YAELC,0BAxCOT,SAAUC,MAAOC,eAChCQ,UAAYC,MAAMX,SAAU,CAC9BY,OAAQ,OACRC,QAAS,gCACsBZ,sBACX,0BACN,oBAEda,KAAMC,KAAKC,UAAUd,eAGpBQ,IAAIO,GAAI,OACHC,WAAaR,IAAIQ,aACjB,IAAIC,qBAAcT,IAAIU,oBAAWF,wBAK1BR,IAAIW,OACnB,MAAOC,gBACQZ,IAAIQ,QAoBMK,CAASvB,SAAUC,MAAOC,SAG7CsB,MAAsB,iBAATf,KAAoBA,KAAOM,KAAKC,UAAUP,OACzD,MAAOgB,KAELD,MAAMC,IAAIC,iBAEVvB,IAAIK,UAAW"}